{
  "root": true,
  "env": {
    "browser": true,
    "es2020": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended", // Ensure Prettier works with ESLint

    "next/core-web-vitals"
  ],
  "ignorePatterns": ["dist", ".eslintrc.ts"],
  "parser": "@typescript-eslint/parser",
  "plugins": ["react-refresh", "boundaries", "import", "unused-imports"],
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    },
    "boundaries/include": ["src/**/*"],
    "boundaries/elements": [
      {
        "type": "app",
        "pattern": "app"
      },
      {
        "type": "pages",
        "pattern": "src/pages/*",
        "capture": ["page"]
      },
      {
        "type": "widgets",
        "pattern": "widgets/*",
        "capture": ["widget"]
      },
      {
        "type": "features",
        "pattern": "features/*",
        "capture": ["feature"]
      },
      {
        "type": "entities",
        "pattern": "entities/*",
        "capture": ["entity"]
      },
      {
        "type": "shared",
        "pattern": "shared/*",
        "capture": ["segment"]
      }
    ]
  },
  "rules": {
    // React Hooks
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",

    // Import Order and Extensions
    "import/order": [
      "error",
      {
        "groups": [
          "builtin", // Node built-ins (like `fs` or `path`)
          "external", // External libraries (like `react`, `lodash`)
          "internal", // Internal imports (absolute paths within your project)
          ["parent", "sibling"], // Parent and sibling imports
          "index", // Index files (`./`)
          "object" // Import objects (like `import { X, Y } from 'module'`)
        ],
        "newlines-between": "always", // Ensures a newline between each group
        "alphabetize": {
          "order": "asc", // Alphabetize imports within each group
          "caseInsensitive": true
        },
        "pathGroups": [
          {
            "pattern": "./style",
            "group": "sibling",
            "position": "before"
          }
        ],
        "pathGroupsExcludedImportTypes": ["builtin"]
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/no-duplicates": "error",
    "import/first": "error",
    "import/newline-after-import": "error",

    // Unused Imports
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],

    // TypeScript Specific
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/no-unused-vars": "off", // Handled by unused-imports plugin
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-use-before-define": "off",

    // General Rules
    "no-use-before-define": "off",
    "no-shadow": "off",
    "no-param-reassign": ["error", { "props": false }],
    "max-len": ["error", { "code": 150, "ignoreComments": true }],
    "react-refresh/only-export-components": 0,

    // Boundaries Rules (preserved from initial config)
    "boundaries/entry-point": [
      2,
      {
        "default": "disallow",
        "rules": [
          {
            "target": [
              [
                "shared",
                {
                  "segment": "lib"
                }
              ]
            ],
            "allow": "*/index.ts"
          },
          {
            "target": [
              [
                "entities",
                {
                  "entity": "*"
                }
              ]
            ],
            "allow": "*/index.ts"
          },
          {
            "target": [
              [
                "features",
                {
                  "feature": "*"
                }
              ]
            ],
            "allow": "*/index.ts"
          },
          {
            "target": [
              [
                "shared",
                {
                  "segment": "lib"
                }
              ]
            ],
            "allow": "*.(ts|tsx)"
          },
          {
            "target": [
              [
                "shared",
                {
                  "segment": "utils"
                }
              ]
            ],
            "allow": "*.(ts|tsx)"
          },
          {
            "target": [
              [
                "shared",
                {
                  "segment": "constants"
                }
              ]
            ],
            "allow": "index.ts"
          },
          {
            "target": [
              [
                "shared",
                {
                  "segment": "hooks"
                }
              ]
            ],
            "allow": "index.ts"
          },
          {
            "target": [
              [
                "shared",
                {
                  "segment": "providers"
                }
              ]
            ],
            "allow": "index.ts"
          },
          {
            "target": [
              [
                "shared",
                {
                  "segment": "api"
                }
              ]
            ],
            "allow": "index.ts"
          },
          {
            "target": [
              [
                "shared",
                {
                  "segment": "ui"
                }
              ]
            ],
            "allow": "**"
          },
          {
            "target": ["app", "pages", "widgets", "features", "entities"],
            "allow": "index.(ts|tsx)"
          }
        ]
      }
    ],
    "boundaries/element-types": [
      2,
      {
        "default": "allow",
        "message": "${file.type} is not allowed to import (${dependency.type})",
        "rules": [
          {
            "from": ["shared"],
            "disallow": ["app", "pages", "widgets", "features", "entities"],
            "message": "Shared module must not import upper layers (${dependency.type})"
          },
          {
            "from": ["entities"],
            "message": "Entity must not import upper layers (${dependency.type})",
            "disallow": ["app", "pages", "widgets", "features"]
          },
          {
            "from": ["entities"],
            "message": "Entity must not import other entity",
            "disallow": [
              [
                "entities",
                {
                  "entity": "!${entity}"
                }
              ]
            ]
          },
          {
            "from": ["features"],
            "message": "Feature must not import upper layers (${dependency.type})",
            "disallow": ["app", "pages", "widgets"]
          },
          {
            "from": ["features"],
            "message": "Feature must not import other feature",
            "disallow": [
              [
                "features",
                {
                  "feature": "!${feature}"
                }
              ]
            ]
          },
          {
            "from": ["widgets"],
            "message": "Widget must not import upper layers (${dependency.type})",
            "disallow": ["app", "pages"]
          },
          {
            "from": ["widgets"],
            "message": "Widget must not import other widget",
            "disallow": [
              [
                "widgets",
                {
                  "widget": "!${widget}"
                }
              ]
            ]
          },
          {
            "from": ["pages"],
            "message": "Page must not import upper layers (${dependency.type})",
            "disallow": ["app"]
          },
          {
            "from": ["pages"],
            "message": "Page must not import other page",
            "disallow": [
              [
                "pages",
                {
                  "page": "!${page}"
                }
              ]
            ]
          }
        ]
      }
    ]
  }
}
